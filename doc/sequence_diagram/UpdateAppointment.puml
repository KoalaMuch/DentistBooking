@startuml Manage Appointment (PUT)

header Dentist Booking Sequence Diagram
footer Page %page% of %lastpage%
title "Manage Appointment (PUT)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:appointments" as routerAppointments
participant "<<middleware>>\n:authMiddleware" as authMiddleware
participant "<<controllers>>\n:appointments" as controllersAppointments
participant "<<model>>\n:Appointment" as modelAppointment
database "<<MongoDB>>\n:appointments" as AppointmentsDatabase

client->server ++:req.put('/appointments/:id')
server->routerAppointments ++:app.use('/appointments',appointments)
routerAppointments->authMiddleware ++:protect()
authMiddleware -> controllersAppointments ++:updateAppointment()
controllersAppointments -> modelAppointment ++:findById(req.param.id)
modelAppointment -> AppointmentsDatabase ++:AppointmentSchema
AppointmentsDatabase --> modelAppointment --:appointment
controllersAppointments <-- modelAppointment --:appointment
alt req.user == appointment.user or req.user.role == 'admin'
controllersAppointments->modelAppointment ++:findByIdAndUpdate(req.param.id, req.body)
modelAppointment ->AppointmentsDatabase ++: AppointmentSchema
AppointmentsDatabase --> modelAppointment --: appointment
controllersAppointments <-- modelAppointment --:appointment
controllersAppointments->client --:response
else req.user != appointment.user and req.user.role != 'admin'
controllersAppointments->client --:response
end

@enduml
